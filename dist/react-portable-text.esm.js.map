{"version":3,"file":"react-portable-text.esm.js","sources":["../src/components/merge.ts","../src/components/marks.tsx","../src/components/list.tsx","../src/warnings.ts","../src/components/unknown.tsx","../src/components/defaults.tsx","../src/react-portable-text.tsx"],"sourcesContent":["\"use client\";\nimport type {PortableTextReactComponents, PortableTextComponents} from '../types'\n\nexport function mergeComponents(\n  parent: PortableTextReactComponents,\n  overrides: PortableTextComponents\n): PortableTextReactComponents {\n  const {block, list, listItem, marks, types, ...rest} = overrides\n  // @todo figure out how to not `as ...` these\n  return {\n    ...parent,\n    block: mergeDeeply(parent, overrides, 'block') as PortableTextReactComponents['block'],\n    list: mergeDeeply(parent, overrides, 'list') as PortableTextReactComponents['list'],\n    listItem: mergeDeeply(parent, overrides, 'listItem') as PortableTextReactComponents['listItem'],\n    marks: mergeDeeply(parent, overrides, 'marks') as PortableTextReactComponents['marks'],\n    types: mergeDeeply(parent, overrides, 'types') as PortableTextReactComponents['types'],\n    ...rest,\n  }\n}\n\nfunction mergeDeeply(\n  parent: PortableTextReactComponents,\n  overrides: PortableTextComponents,\n  key: 'block' | 'list' | 'listItem' | 'marks' | 'types'\n): PortableTextReactComponents[typeof key] {\n  const override = overrides[key]\n  const parentVal = parent[key]\n\n  if (typeof override === 'function') {\n    return override\n  }\n\n  if (override && typeof parentVal === 'function') {\n    return override\n  }\n\n  if (override) {\n    return {...parentVal, ...override} as PortableTextReactComponents[typeof key]\n  }\n\n  return parentVal\n}\n","\"use client\";\nimport type {TypedObject} from '@portabletext/types'\nimport React from 'react'\nimport type {PortableTextMarkComponent} from '../types'\n\ninterface DefaultLink extends TypedObject {\n  _type: 'link'\n  href: string\n}\n\nconst link: PortableTextMarkComponent<DefaultLink> = ({children, value}) => (\n  <a href={value?.href}>{children}</a>\n)\n\nconst underlineStyle = {textDecoration: 'underline'}\n\nexport const defaultMarks: Record<string, PortableTextMarkComponent | undefined> = {\n  em: ({children}) => <em>{children}</em>,\n  strong: ({children}) => <strong>{children}</strong>,\n  code: ({children}) => <code>{children}</code>,\n  underline: ({children}) => <span style={underlineStyle}>{children}</span>,\n  'strike-through': ({children}) => <del>{children}</del>,\n  link,\n}\n","\"use client\";\nimport React from 'react'\nimport type {PortableTextListComponent, PortableTextListItemComponent} from '../types'\n\nexport const defaultLists: Record<'number' | 'bullet', PortableTextListComponent> = {\n  number: ({children}) => <ol>{children}</ol>,\n  bullet: ({children}) => <ul>{children}</ul>,\n}\n\nexport const DefaultListItem: PortableTextListItemComponent = ({children}) => <li>{children}</li>\n","const getTemplate = (type: string, prop: string): string =>\r\n  `[@portabletext/react] Unknown ${type}, specify a component for it in the \\`components.${prop}\\` prop`\r\n\r\nexport const unknownTypeWarning = (typeName: string): string =>\r\n  getTemplate(`block type \"${typeName}\"`, 'types')\r\n\r\nexport const unknownMarkWarning = (markType: string): string =>\r\n  getTemplate(`mark type \"${markType}\"`, 'marks')\r\n\r\nexport const unknownBlockStyleWarning = (blockStyle: string): string =>\r\n  getTemplate(`block style \"${blockStyle}\"`, 'block')\r\n\r\nexport const unknownListStyleWarning = (listStyle: string): string =>\r\n  getTemplate(`list style \"${listStyle}\"`, 'list')\r\n\r\nexport const unknownListItemStyleWarning = (listStyle: string): string =>\r\n  getTemplate(`list item style \"${listStyle}\"`, 'listItem')\r\n\r\nexport function printWarning(message: string): void {\r\n  console.warn(message)\r\n}\r\n","\"use client\";\nimport React from 'react'\nimport type {PortableTextReactComponents} from '../types'\nimport {unknownTypeWarning} from '../warnings'\n\nconst hidden = {display: 'none'}\n\nexport const DefaultUnknownType: PortableTextReactComponents['unknownType'] = ({\n  value,\n  isInline,\n}) => {\n  const warning = unknownTypeWarning(value._type)\n  return isInline ? <span style={hidden}>{warning}</span> : <div style={hidden}>{warning}</div>\n}\n\nexport const DefaultUnknownMark: PortableTextReactComponents['unknownMark'] = ({\n  markType,\n  children,\n}) => {\n  return <span className={`unknown__pt__mark__${markType}`}>{children}</span>\n}\n\nexport const DefaultUnknownBlockStyle: PortableTextReactComponents['unknownBlockStyle'] = ({\n  children,\n}) => {\n  return <p>{children}</p>\n}\n\nexport const DefaultUnknownList: PortableTextReactComponents['unknownList'] = ({children}) => {\n  return <ul>{children}</ul>\n}\n\nexport const DefaultUnknownListItem: PortableTextReactComponents['unknownListItem'] = ({\n  children,\n}) => {\n  return <li>{children}</li>\n}\n","\"use client\";\nimport React from 'react'\nimport type {PortableTextBlockStyle} from '@portabletext/types'\nimport type {PortableTextBlockComponent, PortableTextReactComponents} from '../types'\nimport {defaultMarks} from './marks'\nimport {defaultLists, DefaultListItem} from './list'\nimport {\n  DefaultUnknownType,\n  DefaultUnknownMark,\n  DefaultUnknownList,\n  DefaultUnknownListItem,\n  DefaultUnknownBlockStyle,\n} from './unknown'\n\nexport const DefaultHardBreak = () => <br />\n\nexport const defaultBlockStyles: Record<\n  PortableTextBlockStyle,\n  PortableTextBlockComponent | undefined\n> = {\n  normal: ({children}) => <p>{children}</p>,\n  blockquote: ({children}) => <blockquote>{children}</blockquote>,\n  h1: ({children}) => <h1>{children}</h1>,\n  h2: ({children}) => <h2>{children}</h2>,\n  h3: ({children}) => <h3>{children}</h3>,\n  h4: ({children}) => <h4>{children}</h4>,\n  h5: ({children}) => <h5>{children}</h5>,\n  h6: ({children}) => <h6>{children}</h6>,\n}\n\nexport const defaultComponents: PortableTextReactComponents = {\n  types: {},\n\n  block: defaultBlockStyles,\n  marks: defaultMarks,\n  list: defaultLists,\n  listItem: DefaultListItem,\n  hardBreak: DefaultHardBreak,\n\n  unknownType: DefaultUnknownType,\n  unknownMark: DefaultUnknownMark,\n  unknownList: DefaultUnknownList,\n  unknownListItem: DefaultUnknownListItem,\n  unknownBlockStyle: DefaultUnknownBlockStyle,\n}\n","import React, {ReactNode, useMemo} from 'react'\r\nimport {\r\n  LIST_NEST_MODE_HTML,\r\n  ToolkitNestedPortableTextSpan,\r\n  ToolkitTextNode,\r\n} from '@portabletext/toolkit'\r\nimport type {\r\n  MissingComponentHandler,\r\n  NodeRenderer,\r\n  PortableTextProps,\r\n  PortableTextReactComponents,\r\n  ReactPortableTextList,\r\n  Serializable,\r\n  SerializedBlock,\r\n} from './types'\r\nimport {\r\n  isPortableTextBlock,\r\n  isPortableTextListItemBlock,\r\n  isPortableTextToolkitList,\r\n  isPortableTextToolkitSpan,\r\n  isPortableTextToolkitTextNode,\r\n  nestLists,\r\n  spanToPlainText,\r\n  buildMarksTree,\r\n} from '@portabletext/toolkit'\r\nimport type {\r\n  PortableTextBlock,\r\n  PortableTextListItemBlock,\r\n  PortableTextMarkDefinition,\r\n  PortableTextSpan,\r\n  TypedObject,\r\n} from '@portabletext/types'\r\nimport {mergeComponents} from './components/merge'\r\nimport {defaultComponents} from './components/defaults'\r\nimport {\r\n  printWarning,\r\n  unknownBlockStyleWarning,\r\n  unknownListItemStyleWarning,\r\n  unknownListStyleWarning,\r\n  unknownMarkWarning,\r\n  unknownTypeWarning,\r\n} from './warnings'\r\n\r\nexport function PortableText<B extends TypedObject = PortableTextBlock>({\r\n  value: input,\r\n  components: componentOverrides,\r\n  listNestingMode,\r\n  onMissingComponent: missingComponentHandler = printWarning,\r\n}: PortableTextProps<B>) {\r\n  const handleMissingComponent = missingComponentHandler || noop\r\n  const blocks = Array.isArray(input) ? input : [input]\r\n  const nested = nestLists(blocks, listNestingMode || LIST_NEST_MODE_HTML)\r\n\r\n  const components = useMemo(() => {\r\n    return componentOverrides\r\n      ? mergeComponents(defaultComponents, componentOverrides)\r\n      : defaultComponents\r\n  }, [componentOverrides])\r\n\r\n  const renderNode = useMemo(\r\n    () => getNodeRenderer(components, handleMissingComponent),\r\n    [components, handleMissingComponent]\r\n  )\r\n  const rendered = nested.map((node, index) =>\r\n    renderNode({node: node, index, isInline: false, renderNode})\r\n  )\r\n\r\n  return <>{rendered}</>\r\n}\r\n\r\nconst getNodeRenderer = (\r\n  components: PortableTextReactComponents,\r\n  handleMissingComponent: MissingComponentHandler\r\n): NodeRenderer => {\r\n  function renderNode<N extends TypedObject>(options: Serializable<N>): ReactNode {\r\n    const {node, index, isInline} = options\r\n    const key = node._key || `node-${index}`\r\n\r\n    if (isPortableTextToolkitList(node)) {\r\n      return renderList(node, index, key)\r\n    }\r\n\r\n    if (isPortableTextListItemBlock(node)) {\r\n      return renderListItem(node, index, key)\r\n    }\r\n\r\n    if (isPortableTextToolkitSpan(node)) {\r\n      return renderSpan(node, index, key)\r\n    }\r\n\r\n    if (isPortableTextBlock(node)) {\r\n      return renderBlock(node, index, key, isInline)\r\n    }\r\n\r\n    if (isPortableTextToolkitTextNode(node)) {\r\n      return renderText(node, key)\r\n    }\r\n\r\n    return renderCustomBlock(node, index, key, isInline)\r\n  }\r\n\r\n  /* eslint-disable react/jsx-no-bind */\r\n  function renderListItem(\r\n    node: PortableTextListItemBlock<PortableTextMarkDefinition, PortableTextSpan>,\r\n    index: number,\r\n    key: string\r\n  ) {\r\n    const tree = serializeBlock({node, index, isInline: false, renderNode})\r\n    const renderer = components.listItem\r\n    const handler = typeof renderer === 'function' ? renderer : renderer[node.listItem]\r\n    const Li = handler || components.unknownListItem\r\n\r\n    if (Li === components.unknownListItem) {\r\n      const style = node.listItem || 'bullet'\r\n      handleMissingComponent(unknownListItemStyleWarning(style), {\r\n        type: style,\r\n        nodeType: 'listItemStyle',\r\n      })\r\n    }\r\n\r\n    let children = tree.children\r\n    if (node.style && node.style !== 'normal') {\r\n      // Wrap any other style in whatever the block serializer says to use\r\n      const {listItem, ...blockNode} = node\r\n      children = renderNode({node: blockNode, index, isInline: false, renderNode})\r\n    }\r\n\r\n    return (\r\n      <Li key={key} value={node} index={index} isInline={false} renderNode={renderNode}>\r\n        {children}\r\n      </Li>\r\n    )\r\n  }\r\n\r\n  function renderList(node: ReactPortableTextList, index: number, key: string) {\r\n    const children = node.children.map((child, childIndex) =>\r\n      renderNode({\r\n        node: child._key ? child : {...child, _key: `li-${index}-${childIndex}`},\r\n        index: index,\r\n        isInline: false,\r\n        renderNode,\r\n      })\r\n    )\r\n\r\n    const component = components.list\r\n    const handler = typeof component === 'function' ? component : component[node.listItem]\r\n    const List = handler || components.unknownList\r\n\r\n    if (List === components.unknownList) {\r\n      const style = node.listItem || 'bullet'\r\n      handleMissingComponent(unknownListStyleWarning(style), {nodeType: 'listStyle', type: style})\r\n    }\r\n\r\n    return (\r\n      <List key={key} value={node} index={index} isInline={false} renderNode={renderNode}>\r\n        {children}\r\n      </List>\r\n    )\r\n  }\r\n\r\n  function renderSpan(node: ToolkitNestedPortableTextSpan, _index: number, key: string) {\r\n    const {markDef, markType, markKey} = node\r\n    const Span = components.marks[markType] || components.unknownMark\r\n    const children = node.children.map((child, childIndex) =>\r\n      renderNode({node: child, index: childIndex, isInline: true, renderNode})\r\n    )\r\n\r\n    if (Span === components.unknownMark) {\r\n      handleMissingComponent(unknownMarkWarning(markType), {nodeType: 'mark', type: markType})\r\n    }\r\n\r\n    return (\r\n      <Span\r\n        key={key}\r\n        text={spanToPlainText(node)}\r\n        value={markDef}\r\n        markType={markType}\r\n        markKey={markKey}\r\n        renderNode={renderNode}\r\n      >\r\n        {children}\r\n      </Span>\r\n    )\r\n  }\r\n\r\n  function renderBlock(node: PortableTextBlock, index: number, key: string, isInline: boolean) {\r\n    const {_key, ...props} = serializeBlock({node, index, isInline, renderNode})\r\n    const style = props.node.style || 'normal'\r\n    const handler =\r\n      typeof components.block === 'function' ? components.block : components.block[style]\r\n    const Block = handler || components.unknownBlockStyle\r\n\r\n    if (Block === components.unknownBlockStyle) {\r\n      handleMissingComponent(unknownBlockStyleWarning(style), {\r\n        nodeType: 'blockStyle',\r\n        type: style,\r\n      })\r\n    }\r\n\r\n    return <Block key={key} {...props} value={props.node} renderNode={renderNode} />\r\n  }\r\n\r\n  function renderText(node: ToolkitTextNode, key: string) {\r\n    if (node.text === '\\n') {\r\n      const HardBreak = components.hardBreak\r\n      return HardBreak ? <HardBreak key={key} /> : '\\n'\r\n    }\r\n\r\n    return node.text\r\n  }\r\n\r\n  function renderCustomBlock(node: TypedObject, index: number, key: string, isInline: boolean) {\r\n    const Node = components.types[node._type]\r\n\r\n    const nodeOptions = {\r\n      value: node,\r\n      isInline,\r\n      index,\r\n      renderNode,\r\n    }\r\n\r\n    if (Node) {\r\n      return <Node key={key} {...nodeOptions} />\r\n    }\r\n\r\n    handleMissingComponent(unknownTypeWarning(node._type), {nodeType: 'block', type: node._type})\r\n\r\n    const UnknownType = components.unknownType\r\n    return <UnknownType key={key} {...nodeOptions} />\r\n  }\r\n  /* eslint-enable react/jsx-no-bind */\r\n\r\n  return renderNode\r\n}\r\n\r\nfunction serializeBlock(options: Serializable<PortableTextBlock>): SerializedBlock {\r\n  const {node, index, isInline, renderNode} = options\r\n  const tree = buildMarksTree(node)\r\n  const children = tree.map((child, i) =>\r\n    renderNode({node: child, isInline: true, index: i, renderNode})\r\n  )\r\n\r\n  return {\r\n    _key: node._key || `block-${index}`,\r\n    children,\r\n    index,\r\n    isInline,\r\n    node,\r\n  }\r\n}\r\n\r\nfunction noop() {\r\n  // Intentional noop\r\n}\r\n"],"names":["mergeComponents","parent","overrides","block","list","listItem","marks","types","rest","mergeDeeply","key","override","parentVal","link","children","value","jsx","href","underlineStyle","textDecoration","defaultMarks","em","strong","code","underline","style","defaultLists","number","bullet","DefaultListItem","getTemplate","type","prop","unknownTypeWarning","typeName","unknownMarkWarning","markType","unknownBlockStyleWarning","blockStyle","unknownListStyleWarning","listStyle","unknownListItemStyleWarning","printWarning","message","console","warn","hidden","display","DefaultUnknownType","isInline","warning","_type","DefaultUnknownMark","className","DefaultUnknownBlockStyle","DefaultUnknownList","DefaultUnknownListItem","DefaultHardBreak","defaultBlockStyles","normal","blockquote","h1","h2","h3","h4","h5","h6","defaultComponents","hardBreak","unknownType","unknownMark","unknownList","unknownListItem","unknownBlockStyle","PortableText","input","components","componentOverrides","listNestingMode","onMissingComponent","missingComponentHandler","handleMissingComponent","noop","blocks","Array","isArray","nested","nestLists","LIST_NEST_MODE_HTML","useMemo","renderNode","getNodeRenderer","rendered","map","node","index","options","_key","isPortableTextToolkitList","renderList","isPortableTextListItemBlock","renderListItem","isPortableTextToolkitSpan","renderSpan","isPortableTextBlock","renderBlock","isPortableTextToolkitTextNode","renderText","renderCustomBlock","tree","serializeBlock","renderer","handler","Li","nodeType","blockNode","child","childIndex","component","List","_index","markDef","markKey","Span","text","spanToPlainText","props","Block","HardBreak","Node","nodeOptions","UnknownType","buildMarksTree","i"],"mappings":"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"}